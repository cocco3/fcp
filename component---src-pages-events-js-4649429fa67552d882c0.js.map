{"version":3,"sources":["webpack:///./src/pages/events.js","webpack:///./src/utilities/getImageFromResults.js","webpack:///./src/utilities/index.js"],"names":["EventsPage","props","featuredEvent","data","find","x","featured","dayjs","isAfter","launchDate","featuredEventImage","getImageFromResults","eventImages","posterImage","filteredPastEvents","filter","groupedPastEvents","groupBy","eventDate","year","allPastEvents","Object","keys","sort","a","b","reverse","map","groupYear","i","events","event","j","fluidImage","Image","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","gatsby_image__WEBPACK_IMPORTED_MODULE_10___default","fluid","node","childImageSharp","_components__WEBPACK_IMPORTED_MODULE_11__","image","name","url","photosUrl","key","Fragment","level","display","title","action","description","subtitle","format","ticketsUrl","pageQuery","results","edges","originalName","__webpack_require__","d","__webpack_exports__","utilities_getImageFromResults"],"mappings":"kRAoGeA,UAhFf,SAAoBC,GAElB,IAAMC,EAAgBC,IAAKC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAYC,MAAQC,QAAQH,EAAEI,cAC/DC,EAAqBR,GAAiBS,YAAoBV,EAAME,KAAKS,YAAaV,EAAcW,aAEhGC,EAAqBX,IACxBY,OAAO,SAAAV,GAAC,OAAKA,EAAEC,WAEZU,EAAoBC,YAAQH,EAAoB,SAAAT,GAAC,OAAIE,IAAMF,EAAEa,WAAWC,SAExEC,EAAgBC,OAAOC,KAAKN,GAC/BO,KAAK,SAACC,EAAGC,GACR,OAAOD,EAAEN,UAAYO,EAAEP,UAAY,EAAIM,EAAEN,UAAYO,EAAEP,WAAa,EAAI,IAEzEQ,UACAC,IAAI,SAACC,EAAWC,GACf,IAEMC,EAFQd,EAAkBY,GAEXD,IAAI,SAACI,EAAOC,GAC/B,IAAMC,EAAatB,YAAoBV,EAAME,KAAKS,YAAamB,EAAMlB,aAE/DqB,EAASD,GACbE,EAAAX,EAAAY,cAACC,EAAAb,EAAD,CAAKc,MAAOL,EAAWM,KAAKC,gBAAgBF,QAG9C,OACEH,EAAAX,EAAAY,cAACK,EAAA,EAAD,CACEC,MAAOR,EACPS,KAAMZ,EAAMY,KACZC,IAAKb,EAAMc,UACXC,IAAKd,MAMX,OACEG,EAAAX,EAAAY,cAACD,EAAAX,EAAMuB,SAAP,CAAgBD,IAAKjB,GAEnBM,EAAAX,EAAAY,cAACK,EAAA,EAAD,CAASO,MAAO,EAAGC,QAAS,GACzBrB,GAGHO,EAAAX,EAAAY,cAACK,EAAA,EAAD,KACGX,MAMX,OACEK,EAAAX,EAAAY,cAACK,EAAA,EAAD,KACEN,EAAAX,EAAAY,cAACK,EAAA,EAAD,CAAKS,MAAM,WAEVhD,GACCiC,EAAAX,EAAAY,cAACK,EAAA,EAAD,KACEN,EAAAX,EAAAY,cAACK,EAAA,EAAD,CACEU,OAAO,cACPC,YAAalD,EAAckD,YAC3BV,MAAOP,EAAAX,EAAAY,cAACC,EAAAb,EAAD,CAAKc,MAAO5B,EAAmB6B,KAAKC,gBAAgBF,QAC3De,SAAU9C,IAAML,EAAcgB,WAAWoC,OAAO,iBAChDJ,MAAOhD,EAAcyC,KACrBC,IAAK1C,EAAcqD,cAKzBpB,EAAAX,EAAAY,cAACK,EAAA,EAAD,KAEEN,EAAAX,EAAAY,cAACK,EAAA,EAAD,CAASO,MAAO,EAAGC,QAAS,GAA5B,eAIC7B,KASF,IAAMoC,EAAS,wDC/FP7C,EAPa,SAAU8C,EAASX,GAC7C,OAAOW,EAAQC,MAAMtD,KAAK,SAAAC,GACxB,OAAOA,EAAEkC,KAAKC,iBACTnC,EAAEkC,KAAKC,gBAAgBF,MAAMqB,eAAiBb,KCHvDc,EAAAC,EAAAC,EAAA,sBAAAC","file":"component---src-pages-events-js-4649429fa67552d882c0.js","sourcesContent":["import dayjs from \"dayjs\"\nimport groupBy from 'lodash-es/groupBy'\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport {\n  Feature,\n  Heading,\n  Layout,\n  Poster,\n  PosterGrid,\n  Section,\n  SEO\n} from \"../components\"\n\nimport { getImageFromResults } from \"../utilities\"\n\nimport data from \"../data/events\"\n\nfunction EventsPage(props) {\n\n  const featuredEvent = data.find(x => x.featured && dayjs().isAfter(x.launchDate))\n  const featuredEventImage = featuredEvent && getImageFromResults(props.data.eventImages, featuredEvent.posterImage)\n\n  const filteredPastEvents = data\n    .filter(x => !x.featured)\n\n  const groupedPastEvents = groupBy(filteredPastEvents, x => dayjs(x.eventDate).year())\n\n  const allPastEvents = Object.keys(groupedPastEvents)\n    .sort((a, b) => {\n      return a.eventDate > b.eventDate ? 1 : a.eventDate < b.eventDate ? -1 : 0\n    })\n    .reverse()\n    .map((groupYear, i) => {\n      const group = groupedPastEvents[groupYear]\n\n      const events = group.map((event, j) => {\n        const fluidImage = getImageFromResults(props.data.eventImages, event.posterImage)\n\n        const Image = (fluidImage &&\n          <Img fluid={fluidImage.node.childImageSharp.fluid} />\n        )\n\n        return (\n          <Poster\n            image={Image}\n            name={event.name}\n            url={event.photosUrl}\n            key={j}\n          >\n          </Poster>\n        )\n      })\n\n      return (\n        <React.Fragment key={i}>\n\n          <Heading level={4} display={4}>\n            {groupYear}\n          </Heading>\n\n          <PosterGrid>\n            {events}\n          </PosterGrid>\n        </React.Fragment>\n      )\n    })\n\n  return (\n    <Layout>\n      <SEO title=\"Events\" />\n\n      {featuredEvent &&\n        <Section>\n          <Feature\n            action=\"Get Tickets\"\n            description={featuredEvent.description}\n            image={<Img fluid={featuredEventImage.node.childImageSharp.fluid} />}\n            subtitle={dayjs(featuredEvent.eventDate).format(\"MMMM DD, YYYY\")}\n            title={featuredEvent.name}\n            url={featuredEvent.ticketsUrl}\n          />\n        </Section>\n      }\n\n      <Section>\n\n        <Heading level={3} display={3}>\n          Past Events\n        </Heading>\n\n        {allPastEvents}\n\n      </Section>\n    </Layout>\n  )\n}\n\nexport default EventsPage\n\nexport const pageQuery = graphql`\n  query {\n    eventImages: allFile(filter: {absolutePath: {regex: \"/events/\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid,\n              originalName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const getImageFromResults = function (results, key) {\n  return results.edges.find(x => {\n    return x.node.childImageSharp\n      && x.node.childImageSharp.fluid.originalName === key\n  })\n}\n\nexport default getImageFromResults\n","export { default as getImageFromResults } from \"./getImageFromResults\"\n"],"sourceRoot":""}